{"version":3,"file":"plugin.js","mappings":"mBAAA,IAAIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACAO,QAAQC,IAAI,2BAyFZ,MAAMC,UAA0BC,YAC5B,WAAAC,GACIC,QACAC,KAAKC,OAASD,KAAKE,aAAa,CAAEC,KAAM,SACxCH,KAAKI,YAAcC,SAASC,cAAc,OAC1CN,KAAKI,YAAYG,UAAY,UAC7BP,KAAKQ,aAAeH,SAASC,cAAc,QAC/C,CACA,iBAAAG,GACIT,KAAKC,OAAOS,YAAYV,KAAKQ,cAC7BR,KAAKC,OAAOS,YAAYV,KAAKI,aAC7BJ,KAAKQ,aAAaG,UAlGP,+6CAmGXX,KAAKY,SACT,CAQA,OAAAA,GACI,OAAOpC,EAAUwB,UAAM,OAAQ,GAAQ,YACnCA,KAAKI,YAAYO,gBAAkBX,KAAKa,gBAC5C,GACJ,CACA,cAAAA,GACI,OAAOrC,EAAUwB,UAAM,OAAQ,GAAQ,YACnCN,QAAQC,IAAI,aAAcK,KAAKc,MAC/B,MAAMC,EAAUf,KAAKgB,aACrB,MAAO,iEAIPD,EAAQE,KAAIC,GAAU,OAAOA,WAAeC,KAAK,+BAEnDnB,KAAKc,KAAKM,MAAMH,KAAI,CAACI,EAAMC,IAAU,iDAG7BA,EAAQ,uBACZP,EAAQE,KAAKC,GAAW,0BAA0BG,EAAKH,mBAAuBC,KAAK,oCAGtFA,KAAK,qCAGR,GACJ,CACA,UAAAH,GACI,OAAOO,OAAOC,KAAKxB,KAAKc,KAAKM,MAAM,IAAIK,QAAOC,GAAW,QAANA,GACvD,EAEJC,MAAMC,SAASC,SAASC,kBCjJQ,CAC5BC,GAAI,kBACJC,gBAAiB,EACjBC,KARa,iqBASbC,MAAO,YACPC,SAAU,UACVC,YAAa,UACbC,QAAQ,EACRC,WAAY,CAAC,CACLP,GAAI,YACJQ,KAAM,YACNC,KAAM,eACNC,OAAQ,GACRC,QAAS,GACTC,OAAO,GACR,CACCZ,GAAI,OACJQ,KAAM,QACNC,KAAM,QACNC,OAAQ,mCACRC,QAAS,GACTE,MAAM,IAEdC,OAAQ,ID0HgDjD,E","sources":["webpack://zyllio-plugin-datagrid/./src/datagrid.component.ts","webpack://zyllio-plugin-datagrid/./src/datagrid.metadata.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconsole.log('Plugin Datagrid started');\r\nimport { DataGridMetadata } from \"./datagrid.metadata\";\r\nconst CssContent = `\r\n\r\n  :host {\r\n    display: block;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    padding: 10px 10px;\r\n    box-sizing: border-box;\r\n    --gray: #aeaeae;\r\n    --cell-width: 150px;\r\n    --theme-primary-04:rgb(126, 126, 126);\r\n  }\r\n  \r\n  .content {\r\n    overflow-x: auto;\r\n  }\r\n\r\n  table {\r\n    font-size: 16px;\r\n    border-collapse: collapse;\r\n    table-layout: fixed;\r\n  }\r\n\r\n  td, th { \r\n    border: 1px solid var(--gray); \r\n    padding: 4px;\r\n    text-align: left;\r\n    width: var(--cell-width); \r\n  }\r\n\r\n  .cell {\r\n    word-wrap: break-word;\r\n    overflow: hidden; \r\n    white-space: nowrap;\r\n    width: var(--cell-width); \r\n    text-align: left;\r\n  }\r\n\r\n  th {\r\n    border-top: none;\r\n    color: var(--gray);\r\n    font-weight: normal;\r\n  }\r\n\r\n  th:first-child { \r\n    border-left: none;\r\n    width: 50px; \r\n  }\r\n\r\n  th:last-child { \r\n    border-right: none; \r\n  }\r\n\r\n  td:last-child { \r\n    border-right: none; \r\n  }\r\n\r\n  td:first-child { \r\n    text-align: center;\r\n    border-left: none;\r\n  }\r\n\r\n::-webkit-scrollbar {\r\n  -webkit-appearance: none;\r\n  width: 8px;\r\n  height: 8px;\r\n}\r\n\r\n::-webkit-scrollbar-button {\r\n  display: none;\r\n}\r\n\r\n::-webkit-scrollbar-track {}\r\n\r\n::-webkit-scrollbar-track-piece {\r\n  background-color: var(--theme-primary-04);\r\n}\r\n\r\n::-webkit-scrollbar-corner {\r\n  background-color: var(--theme-primary-04);\r\n}\r\n\r\n::-webkit-scrollbar-thumb {\r\n  background-color: var(--theme-primary-06);\r\n  border-radius: 10px !important;\r\n}\r\n`;\r\nclass DataGridComponent extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n        this.htmlElement = document.createElement('div');\r\n        this.htmlElement.className = 'content';\r\n        this.styleElement = document.createElement('style');\r\n    }\r\n    connectedCallback() {\r\n        this.shadow.appendChild(this.styleElement);\r\n        this.shadow.appendChild(this.htmlElement);\r\n        this.styleElement.innerHTML = CssContent;\r\n        this.refresh();\r\n    }\r\n    /*static get observedAttributes() {\r\n      return ['table']\r\n    }\r\n  \r\n    attributeChangedCallback() {\r\n      this.refresh()\r\n    }*/\r\n    refresh() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.htmlElement.innerHTML = yield this.getHtmlContent();\r\n        });\r\n    }\r\n    getHtmlContent() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            console.log(\"this.data \", this.data);\r\n            const columns = this.getColumns();\r\n            return `\r\n      <table>\r\n        <tr>\r\n          <th></th>\r\n          ${columns.map(column => `<th>${column}</th>`).join('')}\r\n        </tr>\r\n        ${this.data.items.map((item, index) => `\r\n          \r\n          <tr>\r\n            <td>${index + 1}</td>\r\n            ${columns.map((column) => `<td><div class=\"cell\" >${item[column]}</div></td> `).join('')}\r\n          <tr>\r\n\r\n        `).join('')}          \r\n      </table>\r\n    `;\r\n        });\r\n    }\r\n    getColumns() {\r\n        return Object.keys(this.data.items[0]).filter(k => k !== '_id');\r\n    }\r\n}\r\nzySdk.services.registry.registerComponent(DataGridMetadata, DataGridComponent);\r\n","const IconData = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"#cccccc\">    \r\n    <path d=\"M13,2.03V2.05L13,4.05C17.39,4.59 20.5,8.58 19.96,12.97C19.5,16.61 16.64,19.5 13,19.93V21.93C18.5,21.38 22.5,16.5 21.95,11C21.5,6.25 17.73,2.5 13,2.03M11,2.06C9.05,2.25 7.19,3 5.67,4.26L7.1,5.74C8.22,4.84 9.57,4.26 11,4.06V2.06M4.26,5.67C3,7.19 2.25,9.04 2.05,11H4.05C4.24,9.58 4.8,8.23 5.69,7.1L4.26,5.67M2.06,13C2.26,14.96 3.03,16.81 4.27,18.33L5.69,16.9C4.81,15.77 4.24,14.42 4.06,13H2.06M7.1,18.37L5.67,19.74C7.18,21 9.04,21.79 11,22V20C9.58,19.82 8.23,19.25 7.1,18.37M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z\" />\r\n  </svg>\r\n`;\r\nexport const DataGridMetadata = {\r\n    id: 'custom-datagrid',\r\n    metadataVersion: 2,\r\n    icon: IconData,\r\n    label: 'Data grid',\r\n    category: 'Plugins',\r\n    subCategory: 'Plugins',\r\n    hidden: false,\r\n    properties: [{\r\n            id: 'selection',\r\n            name: 'Selection',\r\n            type: 'row-variable',\r\n            tootip: '',\r\n            default: '',\r\n            write: true\r\n        }, {\r\n            id: 'data',\r\n            name: 'Table',\r\n            type: 'table',\r\n            tootip: 'The table being used to populate',\r\n            default: '',\r\n            main: true\r\n        }],\r\n    styles: []\r\n};\r\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","console","log","DataGridComponent","HTMLElement","constructor","super","this","shadow","attachShadow","mode","htmlElement","document","createElement","className","styleElement","connectedCallback","appendChild","innerHTML","refresh","getHtmlContent","data","columns","getColumns","map","column","join","items","item","index","Object","keys","filter","k","zySdk","services","registry","registerComponent","id","metadataVersion","icon","label","category","subCategory","hidden","properties","name","type","tootip","default","write","main","styles"],"sourceRoot":""}